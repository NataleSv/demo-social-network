{"version":3,"file":"static/js/381.efa5efb5.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social_network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/Post/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapImg\":\"ProfileInfo_wrapImg__COvwT\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n\r\n    activateEditMode = () => {\r\n        this.setState(\r\n            {\r\n                editMode:true\r\n            }\r\n        );\r\n    }\r\n\r\n    deActivateEditMode = () => {\r\n        this.setState(\r\n            {\r\n                editMode:false\r\n            }\r\n        );\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n    componentDidUpdate(prevProps,prevState,p) {\r\n        if(prevState.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    !this.state.editMode &&\r\n                        <div>\r\n                            <span onDoubleClick={ this.activateEditMode }>{this.props.status && \"----\"}</span>\r\n                        </div>\r\n                }\r\n                {\r\n                    this.state.editMode &&\r\n                        <div>\r\n                            <input onChange={this.onStatusChange}\r\n                                   autoFocus={true}\r\n                                   onBlur={this.deActivateEditMode}\r\n                                   value={this.state.status}/>\r\n\r\n                        </div>\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n        }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    !editMode &&\r\n                        <div>\r\n                            <span onDoubleClick={ activateEditMode }>{props.status || \"hjkfghj\"}</span>\r\n                        </div>\r\n                }\r\n                {\r\n                    editMode &&\r\n                        <div>\r\n                            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}/>\r\n                        </div>\r\n                }\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nimport UserImg from \"../../../assets/images/userImg.jpg\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={profile.photos.large != null ? profile.photos.large : UserImg } className={styles.avatar}/>\r\n            </div>\r\n            <div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n            <div>\r\n                <h2>{profile.fullName}</h2>\r\n                <p>Обо мне: {profile.aboutMe}</p>\r\n                <h4>Контакты:</h4>\r\n                <p>facebook: {profile.contacts.facebook}</p>\r\n                <p>website: {profile.contacts.website}</p>\r\n                <p>vk: {profile.contacts.vk}</p>\r\n                <p>twitter: {profile.contacts.twitter}</p>\r\n                <p>instagram: {profile.contacts.instagram}</p>\r\n                <p>youtube: {profile.contacts.youtube}</p>\r\n                <p>github: {profile.contacts.github}</p>\r\n                <p>mainLink: {profile.contacts.mainLink}</p>\r\n                <p>Описние работы:{profile.lookingForAJobDescription} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__M-TPS\"};","import React from \"react\";\r\nimport styles from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n      \r\n        \r\n                <div className={styles.item}>\r\n                    <img src=\"https://miro.medium.com/fit/c/1360/1360/1*aHkiCy29-OUFYmut2Mjabg.png\" />\r\n                    { props. message }\r\n                    <div>\r\n                       <span>like</span> {props.likesCount}\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\n\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\"\r\n                       component={Textarea}\r\n                       placeholder={\"Post message\"}\r\n                       validate={[required, maxLength10]}/>\r\n                <button>Add post</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"}) (AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(\r\n    (props) => {\r\n        let postElements =\r\n            [...props.posts]\r\n                .reverse()\r\n                .map( post => <Post key={post.id} message={post.message} likesCount={post.likesCount}/>);\r\n        let newPostElement = React.createRef();\r\n\r\n        let onAddPost = (values) => {\r\n\r\n            props.addPost(values.newPostText);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h3>My posts</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n                <div>\r\n                    {postElements}\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n)\r\n\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport MyPosts from \"../MyPosts\";\r\nimport {addPostActionCreator} from \"../../../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/Post/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            \r\n            <MyPostsContainer/>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\n\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {useMatch} from \"react-router-dom\";\r\n\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match ? this.props.match.params.userId : this.props.authorizedUserId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile ={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst ProfileURLMatch = (props) => {\r\n    const match = useMatch('/profile/:userId/');\r\n    return <ProfileContainer {...props} match={match} />;\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    WithAuthRedirect\r\n)(ProfileURLMatch);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","src","photos","large","UserImg","className","styles","fullName","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJobDescription","Preloader","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","postElements","posts","reverse","map","post","id","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","WithAuthRedirect","useMatch"],"sourceRoot":""}